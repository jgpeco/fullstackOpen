{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","a","axios","get","response","data","setToken","newToken","create","newObj","config","headers","Authorization","post","login","credentials","App","useState","blogs","setBlogs","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","useEffect","blogService","loggedUser","JSON","parse","window","localStorage","getItem","clearLoginForm","clearBlogForm","handleLogin","e","preventDefault","loginService","userResponse","setItem","stringify","console","log","setTimeout","createBlog","url","concat","onSubmit","type","value","name","onChange","target","onClick","removeItem","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb6467ad.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `Bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObj => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObj, config )\n  return response.data\n}\n\nexport default { getAll, setToken, create }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  //blog content\n  const [blogs, setBlogs] = useState([])\n  //blog form\n  const [blogTitle, setBlogTitle] = useState('')\n  const [blogAuthor, setBlogAuthor] = useState('')\n  const [blogUrl, setBlogUrl] = useState('')\n  //auth\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //errors\n  const [errorMessage, setErrorMessage] = useState('')\n  \n  useEffect(async () => {\n    const blogs = await blogService.getAll()\n    setBlogs(blogs)\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedBloglistUser'))\n    if(loggedUser){\n      setUser(loggedUser)\n      blogService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const clearLoginForm = () => {\n    setUsername('')\n    setPassword('')\n  }\n\n  const clearBlogForm = () => {\n    setBlogTitle('')\n    setBlogAuthor('')\n    setBlogUrl('')\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const userResponse = await loginService.login({username, password})\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(userResponse))\n      blogService.setToken(userResponse.token)\n      setUser(userResponse)\n      clearLoginForm()\n    } catch(exception) {\n        setErrorMessage('Wrong Credentials')\n        clearLoginForm()\n        console.log(errorMessage)\n        setTimeout(() => {\n          setErrorMessage('')\n        }, 4000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    setUser(null)\n    blogService.setToken(null)\n    clearLoginForm()\n    clearBlogForm()\n  }\n\n  const createBlog = async (e) => {\n    e.preventDefault()\n    try {\n      const blog = await blogService.create({\n        title: blogTitle,\n        author: blogAuthor,\n        url: blogUrl\n      })\n      setBlogs(blogs.concat(blog))\n      clearBlogForm()\n    } catch(exception) {\n      setErrorMessage('Invalid or Missing Blog Information')\n      clearBlogForm()\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 4000)\n    }\n  }\n\n  if(user === null){\n    return (\n      <form onSubmit={handleLogin}>\n        <div>\n          Username: \n          <input \n            type=\"text\"\n            value={username}\n            name='username'\n            onChange={(e) => setUsername(e.target.value)}\n            />\n        </div>\n        <div>\n          Password:\n          <input \n            type=\"text\"\n            value={password}\n            name='password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>\n        {user.name} is logged <button onClick={handleLogout}>Logout</button>\n      </p>\n      <h2>Create Blog</h2>\n      <form onSubmit={createBlog}>\n        <div>\n          title: <input \n            type=\"text\"\n            value={blogTitle}\n            name='blogTitle'\n            onChange={({ target }) => setBlogTitle(target.value)}\n          />\n        </div>\n        <div>\n          author: <input \n            type=\"text\"\n            value={blogAuthor}\n            name='blogAuthor'\n            onChange={({ target }) => setBlogAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url: <input \n            type=\"text\"\n            value={blogUrl}\n            onChange={({ target}) => setBlogUrl(target.value)}\n          />\n        </div>\n        <button type='submit'>Create New Blog</button>\n      </form>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}