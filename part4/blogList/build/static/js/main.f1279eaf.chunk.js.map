{"version":3,"sources":["components/Notification.js","components/Blog.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Notification","message","messageType","className","Blog","blog","updateBlog","useState","viewDetails","setViewDetails","showDetails","display","handleLike","a","blogWithUpdatedLike","user","id","title","author","url","likes","style","marginBottom","paddingTop","border","onClick","BlogForm","createBlog","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","handleSubmit","e","preventDefault","newBlog","onSubmit","type","value","name","onChange","target","Togglable","props","visible","setVisible","toggleVisibility","hideWhenVisible","showWhenVisible","buttonName","children","token","getAll","axios","get","response","data","setToken","newToken","create","newObj","config","headers","Authorization","post","update","updateObj","put","login","credentials","App","blogs","setBlogs","username","setUsername","password","setPassword","setUser","setMessage","setMessageType","useEffect","blogService","blogsFromServer","sort","blogA","blogB","console","log","loggedUser","JSON","parse","window","localStorage","getItem","clearLoginForm","showMessage","messageText","setTimeout","handleLogin","loginService","userResponse","setItem","stringify","concat","newInfoForBlog","updatedBlog","map","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1279eaf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({message, messageType}) => {\r\n    if(!message) return null\r\n\r\n    return (\r\n      <div className={`notification-${messageType}`}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, updateBlog }) => {\r\n  const [viewDetails, setViewDetails] = useState(false)\r\n  \r\n  const blogStyle = {\r\n    marginBottom: '0.5rem',\r\n    paddingTop: '0.5rem',\r\n    border: '1px solid black'\r\n  }\r\n\r\n  const toggleView = () => setViewDetails(!viewDetails)\r\n  const showDetails = {display: viewDetails ? '' : 'none'}\r\n\r\n  const handleLike = async () => {\r\n    const blogWithUpdatedLike = {\r\n      user: blog.user.id,\r\n      title: blog.title,\r\n      author: blog.author,\r\n      url: blog.url,\r\n      likes: blog.likes + 1,\r\n      id: blog.id\r\n    }\r\n    await updateBlog(blogWithUpdatedLike)\r\n  }\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div>\r\n        {blog.title} <button onClick={toggleView}>View Details</button>\r\n      </div>\r\n      <div style={showDetails}>\r\n        <p>Author: {blog.author}</p>\r\n        <p>URL: {blog.url}</p>\r\n        {blog.user\r\n          ? <p>Likes: {blog.likes} <button onClick={handleLike}>like</button></p>\r\n          : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n    const [blogTitle, setBlogTitle] = useState('')\r\n    const [blogAuthor, setBlogAuthor] = useState('')\r\n    const [blogUrl, setBlogUrl] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const newBlog = {\r\n            title: blogTitle,\r\n            author: blogAuthor,\r\n            url: blogUrl\r\n        }\r\n        await createBlog(newBlog)\r\n        setBlogTitle('')\r\n        setBlogAuthor('')\r\n        setBlogUrl('')\r\n    }   \r\n\r\n    return (\r\n    <form onSubmit={handleSubmit}>\r\n        <div>\r\n          title: <input \r\n            type=\"text\"\r\n            value={blogTitle}\r\n            name='blogTitle'\r\n            onChange={({ target }) => setBlogTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author: <input \r\n            type=\"text\"\r\n            value={blogAuthor}\r\n            name='blogAuthor'\r\n            onChange={({ target }) => setBlogAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url: <input \r\n            type=\"text\"\r\n            value={blogUrl}\r\n            onChange={({ target}) => setBlogUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button type='submit'>Create New Blog</button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default BlogForm","import React, {useState} from 'react'\r\n\r\nconst Togglable = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n    \r\n    const toggleVisibility = () => setVisible(!visible)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonName}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>Go Back</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `Bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObj => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObj, config )\n  return response.data\n}\n\nconst update = async updateObj => {\n  const response = await axios.put(`${baseUrl}/${updateObj.id}`, updateObj)\n  return response.data\n}\n\nexport default { getAll, setToken, create, update }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\n\nimport Notification from './components/Notification'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\n\nconst App = () => {\n  //blog content\n  const [blogs, setBlogs] = useState([])\n  //auth\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //notifications\n  const [message, setMessage] = useState('')\n  const [messageType, setMessageType] = useState('')\n  \n  useEffect(async () => {\n    const blogsFromServer = await blogService.getAll()\n    //blogs will be listed by the number of likes\n    setBlogs(blogsFromServer.sort((blogA, blogB) => blogB.likes - blogA.likes))\n    console.log(blogs)\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedBloglistUser'))\n    if(loggedUser){\n      setUser(loggedUser)\n      blogService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const clearLoginForm = () => {\n    setUsername('')\n    setPassword('')\n  }\n\n\n  const showMessage = (messageText, type) => {\n      setMessage(messageText)\n      setMessageType(type)\n      setTimeout(() => {\n        setMessage('')\n        setMessageType('')\n      }, 4000)\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const userResponse = await loginService.login({username, password})\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(userResponse))\n      blogService.setToken(userResponse.token)\n      setUser(userResponse)\n      clearLoginForm()\n    } catch(exception) {\n        showMessage('Wrong Credentials', 'error')\n        clearLoginForm()\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    setUser(null)\n    blogService.setToken(null)\n    showMessage('User logged out', 'success')\n    clearLoginForm()\n  }\n\n  const createBlog = async (newBlog) => {\n    try {\n      const blog = await blogService.create(newBlog)\n      setBlogs(blogs.concat(blog))\n      showMessage(`New Blog ${blog.title} added`, 'success')\n    } catch(exception) {\n      showMessage('Invalid or missing information on form', 'error')\n    }\n  }\n\n  const updateBlog = async (newInfoForBlog) => {\n    try {\n      const updatedBlog = await blogService.update(newInfoForBlog)\n      setBlogs(blogs.map(blog => blog.id === updatedBlog.id ? updatedBlog : blog))\n      showMessage(`Blog ${updatedBlog.title} updated`, 'success')\n    } catch(exception) {\n      showMessage('Invalid action', 'error')\n    }\n  }\n\n  if(user === null){\n    return (\n      <form onSubmit={handleLogin}>\n        <Notification message={message} messageType={messageType} />\n        <div>\n          Username: \n          <input \n            type=\"text\"\n            value={username}\n            name='username'\n            onChange={(e) => setUsername(e.target.value)}\n            />\n        </div>\n        <div>\n          Password:\n          <input \n            type=\"text\"\n            value={password}\n            name='password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} messageType={messageType} />\n      <p>\n        {user.name} is logged <button onClick={handleLogout}>Logout</button>\n      </p>\n      <h2>Create Blog</h2>\n      <Togglable buttonName={'Create New Blog'}>\n        <BlogForm createBlog={createBlog} />\n      </Togglable>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './App.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}