{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","axios","get","then","response","data","newToken","login","credentials","a","post","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","useEffect","blogService","loggedUser","JSON","parse","window","localStorage","getItem","token","clearForm","handleLogin","e","preventDefault","loginService","userResponse","setItem","stringify","console","log","setTimeout","onSubmit","type","value","name","onChange","target","onClick","removeItem","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,S,gBCWR,EALA,WAEb,OADgBC,IAAMC,IATR,cAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG5B,EATE,SAACC,GACT,iBAAaA,ICEP,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACaR,IAAMS,KAHjB,aAG+BF,GADjC,cACJJ,EADI,yBAEHA,EAASC,MAFN,2CAAH,uDC6FIM,EA3FH,WAAM,MAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAIgBF,mBAAS,IAJzB,mBAITG,EAJS,KAICC,EAJD,OAKgBJ,mBAAS,IALzB,mBAKTK,EALS,KAKCC,EALD,OAMQN,mBAAS,MANjB,mBAMTO,EANS,KAMHC,EANG,OAQwBR,mBAAS,IARjC,mBAQTS,EARS,KAQKC,EARL,KAUhBC,oBAAS,sBAAC,4BAAAd,EAAA,sEACYe,IADZ,OACFX,EADE,OAERC,EAASD,GAFD,2CAGP,IAEHU,qBAAU,WACR,IAAME,EAAaC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,uBACvDL,IACDL,EAAQK,GACRD,EAAqBC,EAAWM,UAEjC,IAEH,IAAMC,EAAY,WAChBhB,EAAY,IACZE,EAAY,KAGRe,EAAW,uCAAG,WAAOC,GAAP,eAAAzB,EAAA,6DAClByB,EAAEC,iBADgB,kBAGWC,EAAa7B,MAAM,CAACQ,WAAUE,aAHzC,OAGVoB,EAHU,OAIhBT,OAAOC,aAAaS,QAAQ,qBAAsBZ,KAAKa,UAAUF,IACjEb,EAAqBa,EAAaN,OAClCX,EAAQiB,GACRL,IAPgB,kDASdV,EAAgB,qBAChBU,IACAQ,QAAQC,IAAIpB,GACZqB,YAAW,WACTpB,EAAgB,MACf,KAdW,0DAAH,sDAyBjB,OAAY,OAATH,EAEC,0BAAMwB,SAAUV,GACd,yCAEE,2BACEW,KAAK,OACLC,MAAO9B,EACP+B,KAAK,WACLC,SAAU,SAACb,GAAD,OAAOlB,EAAYkB,EAAEc,OAAOH,WAG1C,yCAEE,2BACED,KAAK,OACLC,MAAO5B,EACP6B,KAAK,WACLC,SAAU,SAACb,GAAD,OAAOhB,EAAYgB,EAAEc,OAAOH,WAG1C,4BAAQD,KAAK,UAAb,UAMJ,6BACE,qCACA,2BAAIzB,EAAK2B,KAAT,cACA,4BAAQG,QArCS,WACnBrB,OAAOC,aAAaqB,WAAW,sBAC/B9B,EAAQ,MACRI,EAAqB,MACrBQ,MAiCE,UACCnB,EAAMsC,KAAI,SAAArD,GAAI,OACb,kBAAC,EAAD,CAAMsD,IAAKtD,EAAKuD,GAAIvD,KAAMA,SCtFlCwD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4f45e014.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  //content\n  const [blogs, setBlogs] = useState([])\n  //auth\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //errors\n  const [errorMessage, setErrorMessage] = useState('')\n  \n  useEffect(async () => {\n    const blogs = await blogService.getAll()\n    setBlogs(blogs)\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedBloglistUser'))\n    if(loggedUser){\n      setUser(loggedUser)\n      blogService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const clearForm = () => {\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const userResponse = await loginService.login({username, password})\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(userResponse))\n      blogService.setToken(userResponse.token)\n      setUser(userResponse)\n      clearForm()\n    } catch(exception) {\n        setErrorMessage('Wrong Credentials')\n        clearForm()\n        console.log(errorMessage)\n        setTimeout(() => {\n          setErrorMessage('')\n        }, 4000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    setUser(null)\n    blogService.setToken(null)\n    clearForm()\n  }\n\n  if(user === null){\n    return (\n      <form onSubmit={handleLogin}>\n        <div>\n          Username: \n          <input \n            type=\"text\"\n            value={username}\n            name='username'\n            onChange={(e) => setUsername(e.target.value)}\n            />\n        </div>\n        <div>\n          Password:\n          <input \n            type=\"text\"\n            value={password}\n            name='password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} is logged</p>\n      <button onClick={handleLogout}>Logout</button>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}