{"version":3,"sources":["components/Notification.js","components/Blog.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Notification","message","messageType","className","Blog","blog","useState","viewDetails","setViewDetails","showDetails","display","style","marginBottom","paddingTop","border","title","onClick","author","url","likes","BlogForm","createBlog","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","handleSubmit","e","a","preventDefault","newBlog","onSubmit","type","value","name","onChange","target","Togglable","props","visible","setVisible","toggleVisibility","hideWhenVisible","showWhenVisible","buttonName","children","token","getAll","axios","get","response","data","setToken","newToken","create","newObj","config","headers","Authorization","post","login","credentials","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setMessage","setMessageType","useEffect","blogService","loggedUser","JSON","parse","window","localStorage","getItem","clearLoginForm","showMessage","messageText","setTimeout","handleLogin","loginService","userResponse","setItem","stringify","concat","removeItem","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f99e38bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({message, messageType}) => {\r\n    if(!message) return null\r\n\r\n    return (\r\n      <div className={`notification-${messageType}`}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog }) => {\r\n  const [viewDetails, setViewDetails] = useState(false)\r\n  \r\n  const blogStyle = {\r\n    marginBottom: '0.5rem',\r\n    paddingTop: '0.5rem',\r\n    border: '1px solid black'\r\n  }\r\n\r\n  const toggleView = () => setViewDetails(!viewDetails)\r\n  const showDetails = {display: viewDetails ? '' : 'none'}\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div>\r\n        {blog.title} <button onClick={toggleView}>View Details</button>\r\n      </div>\r\n      <div style={showDetails}>\r\n        Author: {blog.author}\r\n        URL: {blog.url}\r\n        Likes: {blog.likes} <button>like</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n    const [blogTitle, setBlogTitle] = useState('')\r\n    const [blogAuthor, setBlogAuthor] = useState('')\r\n    const [blogUrl, setBlogUrl] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const newBlog = {\r\n            title: blogTitle,\r\n            author: blogAuthor,\r\n            url: blogUrl\r\n        }\r\n        await createBlog(newBlog)\r\n        setBlogTitle('')\r\n        setBlogAuthor('')\r\n        setBlogUrl('')\r\n    }   \r\n\r\n    return (\r\n    <form onSubmit={handleSubmit}>\r\n        <div>\r\n          title: <input \r\n            type=\"text\"\r\n            value={blogTitle}\r\n            name='blogTitle'\r\n            onChange={({ target }) => setBlogTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author: <input \r\n            type=\"text\"\r\n            value={blogAuthor}\r\n            name='blogAuthor'\r\n            onChange={({ target }) => setBlogAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url: <input \r\n            type=\"text\"\r\n            value={blogUrl}\r\n            onChange={({ target}) => setBlogUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button type='submit'>Create New Blog</button>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default BlogForm","import React, {useState} from 'react'\r\n\r\nconst Togglable = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n    \r\n    const toggleVisibility = () => setVisible(!visible)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonName}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>Go Back</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `Bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObj => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObj, config )\n  return response.data\n}\n\nexport default { getAll, setToken, create }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\n\nimport Notification from './components/Notification'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\n\nconst App = () => {\n  //blog content\n  const [blogs, setBlogs] = useState([])\n  //auth\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  //notifications\n  const [message, setMessage] = useState('')\n  const [messageType, setMessageType] = useState('')\n  \n  useEffect(async () => {\n    const blogs = await blogService.getAll()\n    setBlogs(blogs)\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedBloglistUser'))\n    if(loggedUser){\n      setUser(loggedUser)\n      blogService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const clearLoginForm = () => {\n    setUsername('')\n    setPassword('')\n  }\n\n\n  const showMessage = (messageText, type) => {\n      setMessage(messageText)\n      setMessageType(type)\n      setTimeout(() => {\n        setMessage('')\n        setMessageType('')\n      }, 4000)\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const userResponse = await loginService.login({username, password})\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(userResponse))\n      blogService.setToken(userResponse.token)\n      setUser(userResponse)\n      clearLoginForm()\n    } catch(exception) {\n        showMessage('Wrong Credentials', 'error')\n        clearLoginForm()\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBloglistUser')\n    setUser(null)\n    blogService.setToken(null)\n    showMessage('User logged out', 'success')\n    clearLoginForm()\n  }\n\n  const createBlog = async (newBlog) => {\n    try {\n      const blog = await blogService.create(newBlog)\n      setBlogs(blogs.concat(blog))\n      showMessage(`New Blog ${blog.title} added`, 'success')\n    } catch(exception) {\n      showMessage('Invalid os missing information on form', 'error')\n    }\n  }\n\n  if(user === null){\n    return (\n      <form onSubmit={handleLogin}>\n        <Notification message={message} messageType={messageType} />\n        <div>\n          Username: \n          <input \n            type=\"text\"\n            value={username}\n            name='username'\n            onChange={(e) => setUsername(e.target.value)}\n            />\n        </div>\n        <div>\n          Password:\n          <input \n            type=\"text\"\n            value={password}\n            name='password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} messageType={messageType} />\n      <p>\n        {user.name} is logged <button onClick={handleLogout}>Logout</button>\n      </p>\n      <h2>Create Blog</h2>\n      <Togglable buttonName={'Create New Blog'}>\n        <BlogForm createBlog={createBlog} />\n      </Togglable>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './App.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}